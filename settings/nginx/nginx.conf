user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

worker_rlimit_nofile 4096;
events {
    # worker_rlimit_nofileの1/4程度. バックエンドの負荷も考慮
    worker_connections  1024;
#     multi_accept on;	# CPUに負荷がかかるので分割後がよい. default off
    accept_mutex on;	# default off
    accept_mutex_delay 100ms; # default 500ms
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format with_time	'$remote_addr - $remote_user [$time_local] '
                            '"$request" $status $body_bytes_sent '
                            '"$http_referer" "$http_user_agent" $request_time';
    access_log /var/log/nginx/access.log with_time;

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    types_hash_max_size 2048;
    server_tokens off;
    open_file_cache max=100 inactive=65s; # file descriptorのキャッシュ

    proxy_buffers 100 32k;
    proxy_buffer_size 8k;

    # 0でkeepaliveを無効化
    keepalive_timeout 65;
    keepalive_requests 10000;

    # 1mでkey8,000個, 1gまでcache
    proxy_cache_path /var/cache/nginx/cache levels=1:2 keys_zone=zone1:1m max_size=1g inactive=1h;
    proxy_temp_path /var/cache/nginx/tmp;

    # デフォルト(60s)は長すぎるので, 短くする
    proxy_connect_timeout 10s;
    proxy_read_timeout 15s;
    proxy_send_timeout 15s;

    # CPUに余裕があれば
# 		gzip on;
# 		gzip_types text/css text/javascript application/x-javascript application/javascript application/json;
# 		gzip_min_length 1k;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*.conf;
}
